<?php

/**
 * @file
 * Provides basic integration with the GOV.UK Pay system.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;
use Drupal\Core\Url;
use Drupal\govuk_integrations_pay\Entity\GovUkPayment;
use Drupal\webform\Entity\Webform;
use Drupal\Core\Routing\TrustedRedirectResponse;
use GuzzleHttp\Psr7\Uri;

/**
 * Implements hook_theme().
 */
function govuk_integrations_pay_webform_theme($existing, $type, $theme, $path) {
  return [
    'govuk_integrations_pay_webform__govuk_confirmation_page' => [
      'variables' => [
        'payment_id' => NULL,
        'payment_amount' => NULL,
        'payment_status' => NULL,
        'payment_message' => NULL,
        'confirmation_message' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_form_alter().
 */
function govuk_integrations_pay_webform_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  if (substr($form_id, 0, 18) === 'webform_submission') {
    $form['elements'] = $form['elements'] ?? array();
    foreach (Element::children($form['elements']) as $cid) {
      $element = $form['elements'][$cid];
      if ($element['#type'] === 'webform_govuk_integrations_pay') {
        foreach (array_keys($form['actions']) as $action) {
          if ($action != 'preview' && isset($form['actions'][$action]['#type']) && $form['actions'][$action]['#type'] === 'submit') {
            $form['actions'][$action]['#submit'][] = '_govuk_integrations_pay_webform__submit_handler';
          }
        }
        $form['gov-pay-element'] = [
          '#type' => 'hidden',
          '#value' => $element["#webform_key"],
        ];
        break;
      }
    }
  }
}

/**
 * Custom submit handler for GOV.UK Pay enabled webforms.
 *
 * @param array $form
 *   Form array.
 * @param Drupal\Core\Form\FormStateInterface $form_state
 *   Form State.
 */
function _govuk_integrations_pay_webform__submit_handler(array $form, FormStateInterface $form_state) {
  // Load config for GOV.UK Pay.
  $config = \Drupal::config('govuk_integrations_pay.settings');

  // Get Form state variables.
  $values = $form_state->getValues();
  $build = $form_state->getBuildInfo();

  // Fetch Submission ID from submission.
  $submissionForm = $build['callback_object'];
  $submission = $submissionForm->getEntity();
  $sid = $submission->id();

  // Find GOV.UK Pay element.
  $webform = Webform::load($form["#webform_id"]);
  $govPayElement = $webform->getElement($values['gov-pay-element']);

  // Determine GOV.UK Pay amount from the element amount provider.
  $amount = NULL;
  switch ($govPayElement['#amount_provider']) {
    case 'element':
      if (isset($values[$govPayElement['#amount_element']])) {
        $amount = intval($values[$govPayElement['#amount_element']]) * 100;
      }
      break;

    case 'static':
      $amount = $govPayElement['#amount_static'] ? intval($govPayElement['#amount_static']) * 100 : NULL;
      break;
  }

  // Fetch payment message from element.
  $message = $govPayElement['#payment_message'] ? $govPayElement['#payment_message'] : $webform->label();

  // Reduce message length (GOV.UK Pay accepts 255 characters max).
  if (strlen($message) > 254) {
    $message = substr($message, 0, 250) . ' etc';
  }

  // Generate UUID.
  $uuidService = \Drupal::service('uuid');
  $uuid = $uuidService->generate();

  $route_params = [
    'uuid' => $uuid,
    'webform_id' => $webform->id(),
    'submission_id' => $sid,
  ];
  $url_object = Url::fromRoute('govuk_integrations_pay_webform.confirmation_page', $route_params, ['absolute' => TRUE]);
  $returnUrl = new Uri($url_object->toString());

  $pay_client = \Drupal::service('govuk_integrations_pay.api_service');

  /** @var Alphagov\Pay\Response\Payment $payment_response */
  $payment_response = $pay_client->createPayment($amount, $config->get('gov_pay__reference'), $message, $returnUrl);

  // Setup entity record.
  $payment = GovUkPayment::create([
    'payment_id' => $payment_response->payment_id,
    'amount' => $amount,
    'uuid' => $uuid,
    'status' => $payment_response->state->status,
    'webform_id' => $webform->id(),
    'submission_id' => $sid,
  ]);
  $payment->save();

  // Setup redirect to GOV.UK Pay.
  $nextUrl = $payment_response->getPaymentPageUrl();

  if (!is_null($nextUrl)) {
    $form_state->setResponse(new TrustedRedirectResponse((string) $nextUrl, 302));
  }
}
