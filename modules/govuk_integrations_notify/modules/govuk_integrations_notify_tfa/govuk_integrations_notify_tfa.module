<?php

/**
 * @file
 * Provides TFA integration with the GOV.UK Notify system.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\mobile_number\Element\MobileNumber;

/**
 * AJAX callback to resend verification code.
 *
 * @param array $form
 *   Form array.
 * @param Drupal\Core\Form\FormStateInterface $form_state
 *   Form state.
 *
 * @return array
 *   Return token & code.
 */
function _govuk_integrations_notify_tfa__resend_verification(array $form, FormStateInterface $form_state) {
  $util = \Drupal::service('mobile_number.util');
  $code = $util->generateVerificationCode();
  $mobile_number = $form["mobile_number"]["#value"];
  if ($code && $mobile_number) {
    $token = $util->sendVerification($mobile_number, '', $code, []);
    $form_state->set('resent', TRUE);
    $form['resent'] = [
      '#type' => 'value',
      '#value' => TRUE,
    ];
    return [
      'token' => $token,
      'code' => $code,
    ];
  }
}

/**
 * Implements hook_element_info_alter().
 */
function govuk_integrations_notify_tfa_element_info_alter(array &$info) {
  $info["mobile_number"]["#process"][] = '_govuk_integrations_notify_tfa_mobile_field';
}

/**
 * Custom process method for mobile number fields.
 *
 * @param array $element
 *   Field element.
 * @param Drupal\Core\Form\FormStateInterface $form_state
 *   Form state.
 * @param array $form
 *   Form array.
 *
 * @return mixed
 *   Altered elemeet.
 */
function _govuk_integrations_notify_tfa_mobile_field(array $element, FormStateInterface &$form_state, array &$form) {
  $values = $form_state->getValues();
  $user = NULL;
  $tfaEnabled = NULL;
  if ($values['mail']) {
    $user = user_load_by_mail($values['mail']);
  }
  else {
    $user = Drupal::currentUser();
  }
  if (!is_null($user) && $user) {
    $userId = $user->id();
    $userData = \Drupal::service('user.data');
    $tfaEnabled = $userData->get('govuk_integrations_notify_tfa', $userId, 'tfa_enabled');
  }
  $element['govuk_notify_tfa'] = [
    '#prefix' => '<div>',
    '#suffix' => '</div>',
    '#type' => 'checkbox',
    '#default_value' => $tfaEnabled,
    '#title' => '2 factor authentication enabled?',
  ];
  $form["#submit"][] = '_govuk_integrations_notify_tfa_setting_submit';
  $form["actions"]["submit"]["#submit"][] = '_govuk_integrations_notify_tfa_setting_submit';
  return $element;
}

/**
 * Custom submit handler for hanlding mobile number field types.
 *
 * @param array $form
 *   Form array.
 * @param Drupal\Core\Form\FormStateInterface $form_state
 *   Form state.
 */
function _govuk_integrations_notify_tfa_setting_submit(array $form, FormStateInterface $form_state) {
  $values = $form_state->getValues();
  // Loop over values looking for mobile number fields.
  foreach ($values as $key => $value) {
    if (is_array($value)) {
      if (isset($value[0]['govuk_notify_tfa'])) {
        $tfaValue = $value[0]['govuk_notify_tfa'];
        $element = ['#value' => $value[0]];
        $verifiedValue = MobileNumber::isVerified($element);
        $userData = \Drupal::service('user.data');
        $userId = $values['uid'];
        $userData->set('govuk_integrations_notify_tfa', $userId, 'tfa_enabled', $tfaValue);
        // Set up TFA if Mobile number is verified
        // and 2FA field is ticked.
        if ($tfaValue && $verifiedValue) {
          $validation_plugin_manager = \Drupal::service('plugin.manager.tfa.validation');
          $validation_plugin_id = 'tfa_govuk_notify_mobile_number';

          // Duplication of TFA setup.
          $data = ['plugins' => $validation_plugin_id];
          $existing = $userData->get(
            'tfa',
            $userId,
            'tfa_user_settings'
          );
          if (isset($existing['validation_skipped']) && !isset($data['validation_skipped'])) {
            $validation_skipped = $existing['validation_skipped'];
          }
          else {
            $validation_skipped = isset($data['validation_skipped']) ? $data['validation_skipped'] : 0;
          }
          if (!empty($existing['data'])) {
            $tfa_data = $existing['data'];
          }
          else {
            $tfa_data = [
              'plugins' => [],
              'sms' => FALSE,
            ];
          }
          if (isset($data['plugins'])) {
            $tfa_data['plugins'][$data['plugins']] = $data['plugins'];
          }
          if (isset($data['sms'])) {
            $tfa_data['sms'] = $data['sms'];
          }

          $status = 1;
          if (isset($data['status']) && $data['status'] === FALSE) {
            $tfa_data = [];
            $status = 0;
          }
          $record = [
            'tfa_user_settings' => [
              'saved' => \Drupal::time()->getRequestTime(),
              'status' => $status,
              'data' => $tfa_data,
              'validation_skipped' => $validation_skipped,
            ],
          ];

          $userData->set(
            'tfa',
            $userId,
            key($record),
            current($record)
          );
          $validation_plugin = $validation_plugin_manager
            ->createInstance($validation_plugin_id, ['uid' => $userId]);
        }
        break;
      }
    }
  }
}
