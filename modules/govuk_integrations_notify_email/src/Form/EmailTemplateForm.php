<?php

namespace Drupal\govuk_integrations_notify_email\Form;

use Drupal\Core\Entity\EntityForm;
use Drupal\Core\Form\FormStateInterface;
use Symfony\Component\DependencyInjection\ContainerInterface;

class EmailTemplateForm extends EntityForm {

  public function form(array $form, FormStateInterface $form_state) {
    /** @var \Drupal\govuk_integrations_notify_email\Entity\EmailTemplate $entity */
    $entity = $this->entity;

    $form['label'] = [
      '#type' => 'textfield',
      '#title' => $this->t('Name'),
      '#description' => $this->t('A more friendly label for this template mapping'),
      '#default_value' => $entity->getLabel(),
      '#required' => TRUE,
    ];

    // @TODO Get list of templates from GOVUK API.
    $form['template_id'] = [
      '#type' => 'textfield',
      '#title' => $this->t('Template ID'),
      '#description' => $this->t('The template set up on GovUK Notify'),
      '#default_value' => $entity->getTemplateId(),
      '#required' => TRUE,
    ];

    $form['email_id'] = [
      '#type' => 'textfield',
      '#title' => $this->t('Email ID'),
      '#description' => $this->t('The Drupal email ID'),
      '#default_value' => $entity->getEmailId(),
      '#required' => TRUE,
      '#machine_name' => [
        'exists' => [$this, 'exist'],
      ],
    ];

    return parent::form($form, $form_state);
  }

  public function validateForm(array &$form, FormStateInterface $form_state) {
    if ($this->entity->isNew()) {
      $id = str_replace('-', '_', $form_state->getValue('email_id'));

      $entity = $this->entityTypeManager->getStorage('govuk_email_template')->getQuery()
        ->condition('id', $id)
        ->execute();

      if ($entity) {
        $form_state->setError($form['email_id'], 'There is already a template set up for this email ID.');
      }
    }

    parent::validateForm($form, $form_state); // TODO: Change the autogenerated stub
  }

  public function save(array $form, FormStateInterface $form_state) {
    /** @var \Drupal\govuk_integrations_notify_email\Entity\EmailTemplate */
    $entity = $this->entity;

    $entity->set('template_d', $form_state->getValue('template_id'));
    $entity->set('email_id', $form_state->getValue('email_id'));
    $entity->set('name', $form_state->getValue('label'));

    if ($entity->isNew()) {
      $id = str_replace('-', '_', $form_state->getValue('email_id'));
      $entity->set('id', $id);
    }

    $status = $entity->save();

    if ($status === SAVED_NEW) {
      $this->messenger()->addMessage($this->t('Created template "%label".', [
        '%label' => $entity->label(),
      ]));
    }
    else {
      $this->messenger()->addMessage($this->t('Updated template "%label".', [
        '%label' => $entity->label(),
      ]));
    }

    $form_state->setRedirect('govuk_integrations_notify_email.template_list');
  }

  /**
   * Helper function to check whether an Example configuration entity exists.
   */
  public function exist($id) {
    $entity = $this->entityTypeManager->getStorage('govuk_email_template')->getQuery()
      ->condition('id', $id)
      ->execute();
    return (bool) $entity;
  }

}
